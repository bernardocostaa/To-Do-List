// Date consts
const dia = document.querySelector("[data-dia]");
const mes = document.querySelector("[data-mes]");
const ano = document.querySelector("[data-ano]");
const numeroDia = document.querySelector("[data-numero]");

const btn = document.querySelector("[data-btn]");
const btnSave = document.querySelector("[data-salvar]");
const modal = document.querySelector(".modal");
const inputAdd = document.getElementById("addInput");
var editingTask = null

function dataAtual() {
  const dataAtual = new Date();
  numeroDia.innerText = dataAtual.getDate();
  ano.innerText = dataAtual.getFullYear();
  mes.innerText = dataAtual.toLocaleDateString("pt-br", { month: "long" });
  dia.innerText = dataAtual.toLocaleDateString("pt-br", { weekday: "long" });
}

dataAtual();

function getLocalStorage() {
  return JSON.parse(localStorage.getItem("bd_task")) ?? []; // ?? se for verdade faz o outro
}
function setLocalStorage(bdTask) {
  return localStorage.setItem("bd_task", JSON.stringify(bdTask));
}

function deleteTask(index) {
  let dadosTask = getLocalStorage();
  console.log(dadosTask[index]);
  // dadosTask = dadosTask.splice(index, 1);
  // console.log(dadosTask);
  // setLocalStorage(dadosTask);
}

function updateList(index) {
  const dadosTask = readList();
  const taskObj = dadosTask[index]
  taskObj.msg = inputAdd.value
  editingTask.closest('.li-lista').getElementsByTagName('p')[0].innerHTML = inputAdd.value
  dadosTask[index] = taskObj;
  setLocalStorage(dadosTask);
}

function readList() {
  return getLocalStorage();
}

function creatList(listTask) {
  const criarDados = getLocalStorage();
  criarDados.push(listTask);
  setLocalStorage(criarDados);
  updateTabela();
}

function saveDados() {
  if(modal.hasAttribute('action') && modal.getAttribute('action') == 'editar'){
    updateList(modal.getAttribute('index'))
    modal.removeAttribute('action')
    modal.removeAttribute('texto')
    modal.removeAttribute('index')
    modal.classList.remove('ativo')
    return;
  }
  if (inputAdd.value == "") {
    inputAdd.classList.add("ativo");
    return;
  }
  const taskTexto = {
    msg: inputAdd.value,
  };
  const newIndex = document.querySelectorAll('.li-lista').length
  addTask(taskTexto,newIndex)
  // updateList(newIndex,taskTexto)
  creatList(taskTexto);
  // updateTabela();
}

function addTask(texto, index) {
  const newTask = document.createElement("li");
  const list = document.querySelector(".list-task");
  newTask.innerHTML = `<li class="li-lista">
  <div class="item-list">
  <p data-texto>${texto.msg}</p>
  <div class="controles">
  <button><img src="img/editar.svg" alt="" data-controle="editar-${index}"></button >
  <button><img src="img/excluir.svg" alt="" data-controle="exluir-${index}"></button >
  <button><img src="img/finalizar.svg" alt="" data-controle="finaliza-${index}"></button >
  </div>
  </div>
  </li>`;
  list.append(newTask);
  modal.classList.remove("ativo");
}

function clearTable() {
  const linhas = document.querySelectorAll(".list-task li");
  linhas.forEach((item) => {
    item.parentElement.removeChild(item);
  });
}

function updateTabela() {
  const controles = document.querySelectorAll(".controles");
  controles.forEach((btn) => {
    btn.addEventListener("click", btnAcation);
  });
}

function openModal(action,index,textoTaskB) {
  if(action == 'editar'){
    modal.setAttribute('action',action)
    modal.setAttribute('index', index)
    modal.setAttribute('texto', textoTaskB)
    inputAdd.value = textoTaskB
  }else{
    inputAdd.value = "";
  }
  modal.classList.add("ativo");
  outsideClick(() => {
    modal.classList.remove("ativo");
    modal.removeAttribute('action')
    modal.removeAttribute('texto')
    modal.removeAttribute('index')
  });
  inputAdd.classList.remove("ativo");
}

function outsideClick(callback) {
  const html = document.documentElement;
  html.addEventListener("click", handleClick);
  function handleClick(event) {
    if (event.target.classList[0] == "modal") {
      html.removeEventListener("click", handleClick);
      callback();
    }
  }
}
function taskFinalizada(e){
  const currentTask = e.currentTarget.closest('.li-lista')
  currentTask.classList.add('finalizado')
 
}

function btnAcation(e) {
  const [action, index] = e.target.dataset.controle.split("-");
  if (action == "exluir") {
    deleteTask(index);
    e.target.closest('.li-lista').remove()
  } else if (action == "editar") {
    const textoTaskB = e.target.closest('.li-lista').getElementsByTagName('p')[0].innerHTML
    editingTask = e.target
    openModal(action,index,textoTaskB)
  } else {
    taskFinalizada(e)
  }
}

// updateTabela();

btn.addEventListener("click", openModal);

btnSave.addEventListener("click", (e) => {
  e.preventDefault();
  saveDados();
});
